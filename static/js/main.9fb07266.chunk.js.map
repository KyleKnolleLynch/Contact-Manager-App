{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","email","payload","concat","toConsumableArray","map","id","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","phone","className","onClick","style","cursor","float","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","bind","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fb07266.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.email !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  //  DELETE CONTACT EVENT\r\n  onDeleteClick = async (email, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${email}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: email });\r\n  };\r\n\r\n  render() {\r\n    const {id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-4\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-user-times text-danger\"\r\n                  style={{ float: 'right', cursor: 'pointer' }}\r\n                  onClick={() => this.onDeleteClick(email, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                 <i\r\n                  className=\"far fa-edit text-success\"\r\n                  style={{ float: 'right', marginRight: '20px', cursor: 'pointer' }}\r\n                />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value; \r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-3\">My <span className=\"text-warning\">Contacts</span></h1>\r\n        {contacts.map(contact => (\r\n          <Contact \r\n          key={contact.id} \r\n          contact={contact}\r\n          />\r\n        ))}\r\n     </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n    <input\r\n      type={type}\r\n      name={name}\r\n      className={classnames('form-control form-control-lg', {'is-invalid': error})}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n  </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //  VALIDATE/CHECK FOR ERRORS\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is Required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    //  CLEAR STATE/INPUT FIELDS AFTER SUBMIT\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header display-4\">\r\n                <span className=\"text-warning\">Add</span> Contact\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-secondary\"\r\n                    value=\"Add Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    //  VALIDATE/CHECK FOR ERRORS\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is Required' } });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is Required' } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    //  CLEAR STATE/INPUT FIELDS AFTER SUBMIT\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header display-4\">\r\n                <span className=\"text-warning\">Update</span> Contact\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-secondary\"\r\n                    value=\"Update Contact\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-light bg-warning mb-4 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i>{' '}\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i>{' '}\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question-circle\"></i>{' '}\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-warning\">About</span> Contact Manager</h1>\r\n      <p className=\"lead\">Basic app to store, add, and delete contacts.</p>\r\n      <p className=\"text-secondary\">Version 0.1.0 &nbsp; &copy; 2019</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nexport default  () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Oops sorry! This page does not exist.</p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log('componentDidUpdate');\r\n  // }\r\n\r\n  // componentWillMount() {\r\n  //   console.log('componentWillMount...');\r\n  // }\r\n  // //  DEPRICATED TO..\r\n  // UNSAFE_componentWillMount() {}\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log('componentWillUpdate');\r\n  // }\r\n  // //  DEPRICATED TO..\r\n  // UNSAFE_componentWillUpdate() {}\r\n\r\n  // componentWillReceiveProps(nextProps, nextState) {\r\n  //   console.log('componentWillReceiveProps');\r\n  // }\r\n  // //  DEPRICATED TO..\r\n\r\n  // static getDerivedStateFromProps(nextProps, prevState) {\r\n  //   return null;\r\n  // }\r\n\r\n  // //  gDSFP has no access to 'this'.\r\n\r\n  // getSnapshotBeforeUpdate(nextProps, prevState) {}\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-4\">{ title }</h1>\r\n        <p className=\"lead\">{ body }</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test'\nimport { Provider } from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={ Contacts } />\n                <Route exact path=\"/contact/add\" component={ AddContact } />\n                <Route exact path=\"/contact/edit/:id\" component={ EditContact } />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}